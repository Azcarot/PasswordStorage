// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Azcarot/PasswordStorage/internal/storage (interfaces: LiteConn)

// Package mock_storage is a generated GoMock package.
package mock_storage

import (
	context "context"
	reflect "reflect"

	storage "github.com/Azcarot/PasswordStorage/internal/storage"
	gomock "github.com/golang/mock/gomock"
)

// MockLiteConn is a mock of LiteConn interface.
type MockLiteConn struct {
	ctrl     *gomock.Controller
	recorder *MockLiteConnMockRecorder
}

// MockLiteConnMockRecorder is the mock recorder for MockLiteConn.
type MockLiteConnMockRecorder struct {
	mock *MockLiteConn
}

// NewMockLiteConn creates a new mock instance.
func NewMockLiteConn(ctrl *gomock.Controller) *MockLiteConn {
	mock := &MockLiteConn{ctrl: ctrl}
	mock.recorder = &MockLiteConnMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLiteConn) EXPECT() *MockLiteConnMockRecorder {
	return m.recorder
}

// CreateNewUser mocks base method.
func (m *MockLiteConn) CreateNewUser(arg0 context.Context, arg1 storage.RegisterRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNewUser", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateNewUser indicates an expected call of CreateNewUser.
func (mr *MockLiteConnMockRecorder) CreateNewUser(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNewUser", reflect.TypeOf((*MockLiteConn)(nil).CreateNewUser), arg0, arg1)
}

// CreateTablesForGoKeeper mocks base method.
func (m *MockLiteConn) CreateTablesForGoKeeper() {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateTablesForGoKeeper")
}

// CreateTablesForGoKeeper indicates an expected call of CreateTablesForGoKeeper.
func (mr *MockLiteConnMockRecorder) CreateTablesForGoKeeper() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTablesForGoKeeper", reflect.TypeOf((*MockLiteConn)(nil).CreateTablesForGoKeeper))
}

// GetSecretKey mocks base method.
func (m *MockLiteConn) GetSecretKey(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecretKey", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// GetSecretKey indicates an expected call of GetSecretKey.
func (mr *MockLiteConnMockRecorder) GetSecretKey(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecretKey", reflect.TypeOf((*MockLiteConn)(nil).GetSecretKey), arg0)
}
